{
  "swagger": "2.0",
  "info": {
    "title": "Box 2.0 Uploads API",
    "description": "The Box Uploads API allows users to add a new file or add a new file version in the same way as uploading file.",
    "version": "2.0",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0"
    }
  },
  "host": "upload.box.com",
  "basePath": "/api/2.0",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "OAuth2Security": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "https://account.box.com/api/oauth2/authorize",
      "tokenUrl": "https://api.box.com/oauth2/token"
    }
  },
  "security": [
    {
      "OAuth2Security": []
    }
  ],
  "definitions": {
    "Error": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["error"]
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "context_info" : {
          "type" : "object",
          "properties": {
            "errors" : {
              "type": "array",
              "items": {
                "type": "object",
                "properties" : {
                  "reason" : {
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  },
                  "message" : {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "code": {
          "type": "string"
        },
        "help-url": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "request-id": {
          "type": "string"
        }
      }
    },
    "Pagination": {
      "type": "object",
      "properties": {
        "total_count": {
          "type": "integer",
          "format": "int64"
        },
        "limit": {
          "type": "integer",
          "format": "int64"
        },
        "offset": {
          "type": "integer",
          "format": "int64"
        },
        "order": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "by": {
                "type": "string"
              },
              "direction": {
                "type": "string"
              }
            }
          }
        }
      }
    },
    "Reference": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": [
            "folder",
            "file",
            "user",
            "file_version",
            "lock",
            "collaboration",
            "comment",
            "task",
            "web_link",
            "collection",
            "task_assignment",
            "event",
            "realtime_server",
            "webhook_event",
            "webhook",
            "enterprise",
            "invite",
            "email_alias",
            "group",
            "group_membership",
            "device_pinner",
            "retention_policy",
            "retention_policy_assignment",
            "file_version_retention",
            "legal_hold_policy",
            "legal_hold_policy_assignment",
            "legal_hold"
          ]
        }
      }
    },
    "ItemReference": {
      "type": "object",
      "description": "It references either a file or a folder",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "sequence_id": {
              "type": "string",
              "description": "A unique ID for use with the /events endpoint.\nMay be null for some folders such as root or trash."
            },
            "etag": {
              "type": "string",
              "description": "A unique string identifying the version of this folder.\nMay be null for some folders such as root or trash."
            },
            "name": {
              "type": "string",
              "description": "The name of the folder."
            }
          }
        }
      ]
    },
    "FileReference": {
      "type": "object",
      "description": "It references either a file or a folder",
      "allOf": [
        {
          "$ref": "#/definitions/ItemReference"
        },
        {
          "properties": {
            "sha1": {
              "type": "string",
              "description": "The sha1 hash of this file."
            }
          }
        }
      ]
    },
    "FileVersionReference": {
      "type": "object",
      "description": "The version information of the file.",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "sha1": {
              "type": "string",
              "description": "The sha1 hash of this file."
            }
          }
        }
      ]
    },
    "UserReference": {
      "type": "object",
      "description": "It references a user",
      "properties": {
        "type": {
          "type": "string",
          "enum": ["user"]
        },
        "id": {
          "type": "string",
          "description": "Unqiue string identifying this user."
        },
        "name": {
          "type": "string",
          "description": "Name of this user"
        },
        "login": {
          "type": "string",
          "description": "The email address this user uses to login."
        }
      }
    },
    "PathCollection": {
      "type": "object",
      "description": "The path of folders, starting at the root.",
      "allOf": [
        {
          "$ref": "#/definitions/Pagination"
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ItemReference"
              }
            }
          }
        }
      ]
    },
    "Lock": {
      "type": "object",
      "description": "The lock held on the file.",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "created_by": {
              "$ref": "#/definitions/UserReference"
            },
            "created_at": {
              "type": "string",
              "format": "date-time"
            },
            "expired_at": {
              "type": "string",
              "format": "date-time"
            },
            "is_download_prevented": {
              "type": "boolean"
            }
          }
        }
      ]
    },
    "SharedLinkPermissions": {
      "type": "object",
      "properties": {
        "can_download": {
          "type": "boolean"
        },
        "can_preview": {
          "type": "boolean"
        }
      }
    },
    "SharedLink": {
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "download_url": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "vanity_url": {
          "type": "string"
        },
        "is_password_enabled": {
          "type": "boolean"
        },
        "unshared_at": {
          "type": "string"
        },
        "download_count": {
          "type": "integer",
          "format": "int64"
        },
        "preview_count": {
          "type": "integer",
          "format": "int64"
        },
        "access": {
          "type": "string"
        },
        "effective_access": {
          "type": "string"
        },
        "permissions": {
          "$ref": "#/definitions/SharedLinkPermissions"
        }
      }
    },
    "FilePermissions": {
      "type": "object",
      "description": "The permissions that the current user has on the file",
      "properties": {
        "can_download": {
          "type": "boolean"
        },
        "can_preview": {
          "type": "boolean"
        },
        "can_upload": {
          "type": "boolean"
        },
        "can_rename": {
          "type": "boolean"
        },
        "cand_delete": {
          "type": "boolean"
        },
        "can_share": {
          "type": "boolean"
        },
        "can_invite_collaborator": {
          "type": "boolean"
        },
        "can_set_share_access": {
          "type": "boolean"
        }
      }
    },
    "WatermarkInfo": {
      "type": "array",
      "items": {
        "properties": {
          "is_watermarked": {
            "type": "boolean"
          }
        }
      }
    },
    "Collection": {
      "title": "Collection Object",
      "description": "Collections contain information about the items contained inside of them, including files and folders. The only collection available currently is a “Favorites” collection. The contents of the collection are discovered in a similar way in which the contents of a folder are discovered.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/Reference"
        },
        {
          "properties": {
            "name": {
              "type": "string",
              "description": "The name of this collection. The only collection currently available is named “Favorites”"
            },
            "collection_type": {
              "type": "string",
              "description": "The type of the collection. This is used to determine the proper visual treatment for Box-internally created collections. Initially only “favorites” collection-type will be supported.",
              "enum": [
                "favorites"
              ]
            }
          }
        }
      ]
    },
    "BoxFile": {
      "title": "File Object",
      "description": "File information describe file objects in Box, with attributes like who created the file, when it was last modified, and other information. The actual content of the file itself is accessible through the /files/{id}/content endpoint.",
      "type": "object",
      "allOf": [
        {
          "$ref": "#/definitions/FileReference"
        },
        {
          "properties": {
            "file_version": {
              "$ref": "#/definitions/FileVersionReference"
            },
            "description": {
              "type": "string",
              "description": "The description of this file."
            },
            "size": {
              "type": "integer",
              "format": "int64",
              "description": "Size of this file in bytes."
            },
            "path_collection": {
              "$ref": "#/definitions/PathCollection",
              "description": "The path of folders to this file, starting at the root."
            },
            "created_at": {
              "type": "string",
              "format": "date-time",
              "description": "When this file was created on Box’s servers."
            },
            "modified_at": {
              "type": "string",
              "format": "date-time",
              "description": "When this file was last updated on the Box servers."
            },
            "trashed_at": {
              "type": "string",
              "format": "date-time",
              "description": "When this file was last moved to the trash."
            },
            "purged_at": {
              "type": "string",
              "format": "date-time",
              "description": "When this file will be permanently deleted."
            },
            "content_created_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the content of this file was created (more info)."
            },
            "content_modified_at": {
              "type": "string",
              "format": "date-time",
              "description": "When the content of this file was last modified (more info)."
            },
            "created_by": {
              "$ref": "#/definitions/UserReference",
              "description": "The user who first created file."
            },
            "modified_by": {
              "$ref": "#/definitions/UserReference",
              "description": "The user who last updated this file."
            },
            "owned_by": {
              "$ref": "#/definitions/UserReference",
              "description": "The user who owns this file."
            },
            "shared_link": {
              "$ref": "#/definitions/SharedLink"
            },
            "parent": {
              "$ref": "#/definitions/ItemReference",
              "description": "The folder containing this file."
            },
            "item_status": {
              "type": "string",
              "description": "Whether this item is deleted or not."
            },
            "version_number": {
              "type": "string",
              "description": "The version number of the file."
            },
            "comment_count": {
              "type": "integer",
              "format": "int64",
              "description": "The number of comments on a file."
            },
            "permissions": {
              "$ref": "#/definitions/FilePermissions"
            },
            "tags": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "All tags applied to this file."
            },
            "collections": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Collection"
              }
            },
            "lock": {
              "$ref": "#/definitions/Lock"
            },
            "extension": {
              "type": "string",
              "description": "Indicates the suffix, when available, on the file. By default, set to an empty string. The suffix usually indicates the encoding (file format) of the file contents or usage."
            },
            "is_package": {
              "type": "boolean",
              "description": "Whether the file is a package. Used for Mac Packages used by iWorks."
            },
            "expiring_embed_link": {
              "type": "string",
              "description": "An expiring URL for an embedded preview session in an iframe. This URL will expire after 60 seconds and the session will expire after 60 minutes."
            },
            "watermark_info": {
              "$ref": "#/definitions/WatermarkInfo"
            }
          }
        }
      ]
    },
    "FileList": {
      "type": "object",
      "description": "A collection Tasks.",
      "allOf": [
        {
          "$ref": "#/definitions/Pagination"
        },
        {
          "properties": {
            "entries": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/BoxFile"
              }
            }
          }
        }
      ]
    }
  },
  "paths": {
    "/files/content": {
      "post": {
        "tags": [
          "FileUpload"
        ],
        "operationId": "uploadFile",
        "summary": "Upload File",
        "description": "Use the Uploads API to allow users to add a new file.",
        "externalDocs": {
          "url": "https://docs.box.com/reference#upload-a-file"
        },
        "consumes": [
            "multipart/form-data"
        ],
        "parameters": [
          {
              "name" : "file",
              "description" : "File to upload",
              "required" : true,
              "in": "formData",
              "type" : "file"
          },
          {
              "name" : "attributes",
              "description" : "File attributes",
              "in": "formData",
              "required": true,
              "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "File upload error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "201": {
            "description": "The upload would be successful",
            "schema": {
              "$ref": "#/definitions/FileList"
            }
          },
          "409": {
            "description": "Name collision occurs",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/files/{FILE_ID}/content": {
      "post": {
        "tags": [
          "FileUpload"
        ],
        "operationId": "uploadFileVersion",
        "summary": "Upload File Version",
        "description": "This method is used to upload a new version of an existing file in a user’s account. ",
        "externalDocs": {
          "url": "https://docs.box.com/reference#upload-a-new-version-of-a-file"
        },
        "consumes": [
            "multipart/form-data"
        ],
        "parameters": [
          {
            "name": "FILE_ID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "If-Match",
            "description": "This is in the ‘etag’ field of the file object",
            "in": "header",
            "required": false,
            "type": "string"
          },
          {
            "name" : "attributes",
            "description" : "File attributes",
            "in": "formData",
            "type": "string"
          },
          {
              "name" : "file",
              "description" : "File to upload",
              "required" : true,
              "in": "formData",
              "type" : "file"
          }
        ],
        "responses": {
          "default": {
            "description": "File upload error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "200": {
            "description": "The upload would be successful",
            "schema": {
              "$ref": "#/definitions/FileList"
            }
          }
        }
      }
    }
  }
}
